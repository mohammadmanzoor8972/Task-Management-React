{"version":3,"sources":["styled/container.js","styled/theme.js","styled/root.js","components/Header/TaskHeader.js","styled/action.js","helper/index.js","components/TaskItem/index.js","components/Task/index.js","App.js","index.js"],"names":["Container","styled","div","_templateObject","Root","createGlobalStyle","root_templateObject","ApplicationTitle","TaskHeader_templateObject","Delete","action_templateObject","AddButton","button","_templateObject2","AddCardButton","_templateObject3","Text","_templateObject4","randomNumber","min","max","Math","random","GUID","concat","TaskItemStyle","TaskItem_templateObject","TasksItems","_ref","task","index","removeCardHandler","react_default","a","createElement","key","id","draggable","onDragStart","ev","dataTransfer","setData","target","dropEffect","drag","onClick","TaskListStyled","Task_templateObject","Title","Task_templateObject2","Tasks","title","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setTask","confirm","window","item","data","toConsumableArray","splice","event","parentElement","remove","onDrop","preventDefault","el","getData","tagName","prepend","document","getElementById","drop","onDragOver","allowDrop","map","TaskItem_TasksItems","p","prompt","TaskContainer","App_templateObject","App","Fragment","TaskHeader","Task_Tasks","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.ac2bb9de.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { primaryColorLight } from \"./theme\";\n\nexport const Container = styled.div`\n  border: 2px solid purple;\n  margin: 10px;\n  background-color: ${primaryColorLight};\n`;\n\n","export const primaryColor = \"purple\";\nexport const primaryColorLight = \"#ffeeff\";\n\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const Root = createGlobalStyle`\nbody{\nfont-family: Arial, Helvetica, sans-serif;\nmargin:10px;\n}\n`;\n","import React, { Component } from 'react'; \nimport styled from 'styled-components';\nimport { primaryColor } from '../../styled/theme';\nimport { Container } from '../../styled/container';\n\nconst ApplicationTitle = styled(Container)`\n  margin: 0px;\n  font-size: 20px;\n  background-color: ${primaryColor};\n  color: #ffff;\n  padding: 10px;\n`;\n\n\nexport default ApplicationTitle;\n\n","import styled from \"styled-components\";\n\nexport const Delete = styled.div`\n  color: red;\n  cursor: pointer;\n  &:hover {\n    color: grey;\n  }\n`;\n\n\nexport const AddButton = styled.button`\n  height: 20px;\n  margin: 30px;\n  border: none;\n  cursor: pointer;\n`;\n\n\nexport const AddCardButton = styled.button`\n  margin: 10px;\n  cursor: pointer;\n`;\n\nexport const Text = styled.div``;","export function randomNumber(min, max) {  \n    return Math.random() * (max - min) + min; \n}\n\nexport const GUID=()=>{\n    return `${randomNumber(10, 666)}-${randomNumber(666, 777)}-${randomNumber(756, 867)}`\n}","\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Text, Delete } from '../../styled/action';\nimport { GUID } from '../../helper';\n\n\n\n\nconst TaskItemStyle = styled.div`\n  width: 175px;\n  max-height: 100px;\n  border: 1px solid purple;\n  padding: 5px;\n  margin: 5px;\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n`;\n\n\nfunction drag(ev) {\n    ev.dataTransfer.setData(\"cardId\", ev.target.id);\n    ev.dataTransfer.dropEffect = \"move\";\n  }\n\nexport const TasksItems = ({ task, index, removeCardHandler }) => {\n  return (\n    <TaskItemStyle\n      key={GUID()}\n      id={GUID()}\n      draggable\n      onDragStart={(ev) => drag(ev)}\n    >\n      <Text>{task}</Text>{\" \"}\n      <Delete\n        onClick={() => {\n          removeCardHandler(task, index);\n        }}\n      >\n        x\n      </Delete>\n    </TaskItemStyle>\n  );\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { primaryColor, primaryColorLight } from '../../styled/theme';\nimport { Delete, AddCardButton, Text } from '../../styled/action';\nimport { TasksItems } from '../TaskItem';\nimport { GUID } from '../../helper';\n\n\nconst TaskListStyled = styled.div`\n  width: 200px;\n  border: 1px solid ${primaryColor};\n  margin: 5px;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  font-weight: 800;\n  padding: 10px;\n  background-color: ${primaryColorLight};\n  margin-bottom: 5px;\n  justify-content: space-between;\n`;\n\n\nexport const Tasks = ({ title }) => {\n    const [task, setTask] = React.useState(() => []);\n    const confirm = window.confirm;\n  \n    const removeCardHandler = (item, index) => {\n      const cnf = confirm(\"Do you want to remove card ?\");\n  \n      if (cnf) {\n        let data = [...task];\n        data.splice(index, 1);\n        setTask(data);\n      }\n    };\n\n    const removeTaskHandler = (event) => {\n      const cnf = confirm(\"Do you want to remove task ?\");\n  \n      if (cnf) {\n        event.target.parentElement.parentElement.remove();\n      }\n    };\n\n    function allowDrop(ev) {\n        ev.preventDefault();\n      }\n\n      function drop(ev) {\n        ev.preventDefault();\n        let el = ev.target;\n        var data = ev.dataTransfer.getData(\"cardId\");\n        if (ev.target.draggable || ev.target.tagName == \"BUTTON\") {\n          el = ev.target.parentElement;\n        }\n        el.prepend(document.getElementById(data));\n      }\n      \n  \n    return (\n      <div>\n        <TaskListStyled>\n          <Title>\n            <Text>{title}</Text>{\" \"}\n            <Delete\n              onClick={(ev) => {\n                removeTaskHandler(ev);\n              }}\n            >\n              x\n            </Delete>\n          </Title>\n          <div\n            onDrop={(ev) => {\n              drop(ev);\n            }}\n            onDragOver={(ev) => {\n              allowDrop(ev);\n            }}\n          >\n            {task &&\n              task.map((item, index) => (\n                <TasksItems\n                  key={GUID()}\n                  draggable\n                  task={item}\n                  index={index}\n                  removeCardHandler={removeCardHandler}\n                />\n              ))}\n          </div>\n          <AddCardButton\n            onClick={() => {\n              const p = prompt(\"Enter Title\");\n              if (p) {\n                setTask([...task, p]);\n              }\n            }}\n          >\n            + Add a Card\n          </AddCardButton>\n        </TaskListStyled>\n      </div>\n    );\n  };\n  ","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"./styled/container\";\nimport { Root } from \"./styled/root\";\nimport ApplicationTitle from \"./components/Header/TaskHeader\";\nimport { Tasks } from \"./components/Task\";\nimport { AddButton } from \"./styled/action\";\nimport { GUID } from \"./helper\";\n\nconst TaskContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nexport default function App() {\n\n  const [task, setTask] = React.useState([]);\n  const prompt = window.prompt;\n\n  return (\n    <>\n      <Root />\n      <Container>\n        <ApplicationTitle>Tavisca Task Management</ApplicationTitle>\n        <TaskContainer>\n          {task && task.map(item => <Tasks title={item} key={GUID()}/>)}\n          <AddButton\n            onClick={() => {\n              const p = prompt(\"Enter Title\");\n              if (p) {\n                setTask([...task, p]);\n              }\n            }}\n          >\n            + Add another Tasks\n          </AddButton>\n        </TaskContainer>\n      </Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <App />,\n  rootElement\n);\n"],"sourceRoot":""}